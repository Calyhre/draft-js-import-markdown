>> Plain Text
a
~~~~~~
<p>a</p>

>> Single Inline Style
asd**f**
~~~~~~
<p>asd<strong>f</strong></p>

>> Nested Inline Style
_**BoldItalic**_
~~~~~~
<p><em><strong>BoldItalic</strong></em></p>

>> Adjacent Inline Style
_Bold_**Italic**
~~~~~~
<p><em>Bold</em><strong>Italic</strong></p>

>> Link without title
Hello [World](/a).
~~~~~~
<p>Hello <a href="/a">World</a>.</p>

>> Link with title
Hello [World](/a "foo").
~~~~~~
<p>Hello <a href="/a" title="foo">World</a>.</p>

// >> Link with escaped title
// Hello [World](/a "f\"oo").
// ~~~~~~
// <p>Hello <a href="/a" title="f\&quot;oo">World</a>.</p>

>> Link with inline style
[_a_](/)
~~~~~~
<p><a href="/"><em>a</em></a></p>

>> Headings
# One
## Two
#### Four
~~~~~~
<h1>One</h1><h2>Two</h2><h4>Four</h4>

>> Blockquote
> One
~~~~~~
<blockquote><p>One</p></blockquote>

>> Ordered list
An ordered list:

1. One
2. Two
~~~~~~
<p>An ordered list:</p><ol><li><p>One</p></li><li><p>Two</p></li></ol>

>> Code Block
A code block:

    let foo = 1;
~~~~~~
<p>A code block:</p><pre>let foo = 1;</pre>

>> Fenced Code Block
A code block:
```
let foo = 1;
```
~~~~~~
<p>A code block:</p><pre>let foo = 1;</pre>

>> Fenced Code Block with lang
A code block:
```js
let foo = 1;
```
~~~~~~
<p>A code block:</p><pre lang="js">let foo = 1;</pre>

>> Inline code
Example: `let foo = 1;`
~~~~~~
<p>Example: <code>let foo = 1;</code></p>
